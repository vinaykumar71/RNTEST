{"version":3,"sources":["TouchableOpacity.js"],"names":["TouchableOpacity","getChildStyleOpacityWithDefault","childStyle","StyleSheet","flatten","props","style","opacity","Animated","Value","setOpacityTo","value","duration","timing","toValue","easing","Easing","inOut","quad","useNativeDriver","start","onStateChange","from","to","TOUCHABLE_STATE","BEGAN","activeOpacity","UNDETERMINED","MOVED_OUTSIDE","rest","children","Component","defaultProps","GenericTouchable","propTypes","publicPropTypes","PropTypes","any","number"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AACA;;AACA;;AACA;;;;;;;;;;IAKqBA,gB;;;;;;;;;;;;;;;;UAanBC,+B,GAAkC,YAAM;AACtC,UAAMC,UAAU,GAAGC,wBAAWC,OAAX,CAAmB,MAAKC,KAAL,CAAWC,KAA9B,KAAwC,EAA3D;AACA,aAAOJ,UAAU,CAACK,OAAX,IAAsB,IAAtB,GAA6B,CAA7B,GAAiCL,UAAU,CAACK,OAAnD;AACD,K;;UAEDA,O,GAAU,IAAIC,sBAASC,KAAb,CAAmB,MAAKR,+BAAL,EAAnB,C;;UAEVS,Y,GAAe,UAACC,KAAD,EAAQC,QAAR,EAAqB;AAClCJ,4BAASK,MAAT,CAAgB,MAAKN,OAArB,EAA8B;AAC5BO,QAAAA,OAAO,EAAEH,KADmB;AAE5BC,QAAAA,QAAQ,EAAEA,QAFkB;AAG5BG,QAAAA,MAAM,EAAEC,oBAAOC,KAAP,CAAaD,oBAAOE,IAApB,CAHoB;AAI5BC,QAAAA,eAAe,EAAE;AAJW,OAA9B,EAKGC,KALH;AAMD,K;;UAEDC,a,GAAgB,UAACC,IAAD,EAAOC,EAAP,EAAc;AAC5B,UAAIA,EAAE,KAAKC,kCAAgBC,KAA3B,EAAkC;AAChC,cAAKf,YAAL,CAAkB,MAAKL,KAAL,CAAWqB,aAA7B,EAA4C,CAA5C;AACD,OAFD,MAEO,IACLH,EAAE,KAAKC,kCAAgBG,YAAvB,IACAJ,EAAE,KAAKC,kCAAgBI,aAFlB,EAGL;AACA,cAAKlB,YAAL,CAAkB,MAAKT,+BAAL,EAAlB,EAA0D,GAA1D;AACD;AACF,K;;;;;;;6BAEQ;AAAA,wBACyB,KAAKI,KAD9B;AAAA,0CACCC,KADD;AAAA,UACCA,KADD,kCACS,EADT;AAAA,UACgBuB,IADhB;AAEP,aACE,6BAAC,yBAAD,6BACMA,IADN;AAEE,QAAA,KAAK,EAAE,CACLvB,KADK,EAEL;AACEC,UAAAA,OAAO,EAAE,KAAKA;AADhB,SAFK,CAFT;AAQE,QAAA,aAAa,EAAE,KAAKc;AARtB,UASG,KAAKhB,KAAL,CAAWyB,QAAX,GAAsB,KAAKzB,KAAL,CAAWyB,QAAjC,GAA4C,6BAAC,iBAAD,OAT/C,CADF;AAaD;;;EAvD2CC,gB;;;AAAzB/B,gB,CACZgC,Y,mCACFC,0BAAiBD,Y;AACpBN,EAAAA,aAAa,EAAE;;AAHE1B,gB,CAMZkC,S,mCACFD,0BAAiBE,e;AACpB7B,EAAAA,KAAK,EAAE8B,mBAAUC,G;AACjBX,EAAAA,aAAa,EAAEU,mBAAUE","sourcesContent":["import { Animated, Easing, StyleSheet, View } from 'react-native';\nimport GenericTouchable, { TOUCHABLE_STATE } from './GenericTouchable';\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\n/**\n * TouchableOpacity bases on timing animation which has been used in RN's core\n */\nexport default class TouchableOpacity extends Component {\n  static defaultProps = {\n    ...GenericTouchable.defaultProps,\n    activeOpacity: 0.2,\n  };\n\n  static propTypes = {\n    ...GenericTouchable.publicPropTypes,\n    style: PropTypes.any,\n    activeOpacity: PropTypes.number,\n  };\n\n  // opacity is 1 one by default but could be overwritten\n  getChildStyleOpacityWithDefault = () => {\n    const childStyle = StyleSheet.flatten(this.props.style) || {};\n    return childStyle.opacity == null ? 1 : childStyle.opacity;\n  };\n\n  opacity = new Animated.Value(this.getChildStyleOpacityWithDefault());\n\n  setOpacityTo = (value, duration) => {\n    Animated.timing(this.opacity, {\n      toValue: value,\n      duration: duration,\n      easing: Easing.inOut(Easing.quad),\n      useNativeDriver: true,\n    }).start();\n  };\n\n  onStateChange = (from, to) => {\n    if (to === TOUCHABLE_STATE.BEGAN) {\n      this.setOpacityTo(this.props.activeOpacity, 0);\n    } else if (\n      to === TOUCHABLE_STATE.UNDETERMINED ||\n      to === TOUCHABLE_STATE.MOVED_OUTSIDE\n    ) {\n      this.setOpacityTo(this.getChildStyleOpacityWithDefault(), 150);\n    }\n  };\n\n  render() {\n    const { style = {}, ...rest } = this.props;\n    return (\n      <GenericTouchable\n        {...rest}\n        style={[\n          style,\n          {\n            opacity: this.opacity,\n          },\n        ]}\n        onStateChange={this.onStateChange}>\n        {this.props.children ? this.props.children : <View />}\n      </GenericTouchable>\n    );\n  }\n}\n"]}