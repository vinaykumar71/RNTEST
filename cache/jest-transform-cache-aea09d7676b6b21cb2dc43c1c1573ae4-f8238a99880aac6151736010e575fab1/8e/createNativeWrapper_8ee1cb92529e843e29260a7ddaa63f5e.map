{"version":3,"sources":["createNativeWrapper.js"],"names":["NATIVE_WRAPPER_PROPS_FILTER","createNativeWrapper","Component","config","ComponentWrapper","React","forwardRef","props","ref","gestureHandlerProps","Object","keys","reduce","res","key","indexOf","propTypes","displayName"],"mappings":";;;;;;;;;;;AAAA;;AAEA;;;;;;AASA,IAAMA,2BAA2B,GAAG,CAClC,IADkC,EAElC,aAFkC,EAGlC,SAHkC,EAIlC,SAJkC,EAKlC,sBALkC,EAMlC,yBANkC,EAOlC,SAPkC,EAQlC,gBARkC,EASlC,sBATkC,EAUlC,SAVkC,EAWlC,UAXkC,EAYlC,aAZkC,EAalC,aAbkC,EAclC,SAdkC,EAelC,uBAfkC,EAgBlC,sBAhBkC,EAiBlC,uBAjBkC,EAkBlC,6BAlBkC,CAApC;;AAqBe,SAASC,mBAAT,CAA6BC,SAA7B,EAAqD;AAAA,MAAbC,MAAa,uEAAJ,EAAI;;AAClE,MAAMC,gBAAgB,GAAGC,eAAMC,UAAN,CAAiB,UAACC,KAAD,EAAQC,GAAR,EAAgB;AAExD,QAAMC,mBAAmB,GAAGC,MAAM,CAACC,IAAP,CAAYJ,KAAZ,EAAmBK,MAAnB,CAC1B,UAACC,GAAD,EAAMC,GAAN,EAAc;AACZ,UAAId,2BAA2B,CAACe,OAA5B,CAAoCD,GAApC,MAA6C,CAAC,CAAlD,EAAqD;AACnDD,QAAAA,GAAG,CAACC,GAAD,CAAH,GAAWP,KAAK,CAACO,GAAD,CAAhB;AACD;;AACD,aAAOD,GAAP;AACD,KANyB,oBAOrBV,MAPqB,EAA5B;AASA,WACE,6BAAC,iCAAD,EAA8BM,mBAA9B,EACE,6BAAC,SAAD,6BAAeF,KAAf;AAAsB,MAAA,GAAG,EAAEC;AAA3B,OADF,CADF;AAKD,GAhBwB,CAAzB;;AAkBAJ,EAAAA,gBAAgB,CAACY,SAAjB,qBACKd,SAAS,CAACc,SADf;AAGAZ,EAAAA,gBAAgB,CAACa,WAAjB,GAA+Bf,SAAS,CAACe,WAAV,IAAyB,kBAAxD;AAEA,SAAOb,gBAAP;AACD","sourcesContent":["import React from 'react';\n\nimport NativeViewGestureHandler from './NativeViewGestureHandler';\n\n/*\n * This array should consist of:\n *   - All keys in propTypes from NativeGestureHandler\n *     (and all keys in GestureHandlerPropTypes)\n *   - 'onGestureHandlerEvent'\n *   - 'onGestureHandlerStateChange'\n */\nconst NATIVE_WRAPPER_PROPS_FILTER = [\n  'id',\n  'minPointers',\n  'enabled',\n  'waitFor',\n  'simultaneousHandlers',\n  'shouldCancelWhenOutside',\n  'hitSlop',\n  'onGestureEvent',\n  'onHandlerStateChange',\n  'onBegan',\n  'onFailed',\n  'onCancelled',\n  'onActivated',\n  'onEnded',\n  'shouldActivateOnStart',\n  'disallowInterruption',\n  'onGestureHandlerEvent',\n  'onGestureHandlerStateChange',\n];\n\nexport default function createNativeWrapper(Component, config = {}) {\n  const ComponentWrapper = React.forwardRef((props, ref) => {\n    // filter out props that should be passed to gesture handler wrapper\n    const gestureHandlerProps = Object.keys(props).reduce(\n      (res, key) => {\n        if (NATIVE_WRAPPER_PROPS_FILTER.indexOf(key) !== -1) {\n          res[key] = props[key];\n        }\n        return res;\n      },\n      { ...config } // watch out not to modify config\n    );\n    return (\n      <NativeViewGestureHandler {...gestureHandlerProps}>\n        <Component {...props} ref={ref} />\n      </NativeViewGestureHandler>\n    );\n  });\n\n  ComponentWrapper.propTypes = {\n    ...Component.propTypes,\n  };\n  ComponentWrapper.displayName = Component.displayName || 'ComponentWrapper';\n\n  return ComponentWrapper;\n}\n"]}