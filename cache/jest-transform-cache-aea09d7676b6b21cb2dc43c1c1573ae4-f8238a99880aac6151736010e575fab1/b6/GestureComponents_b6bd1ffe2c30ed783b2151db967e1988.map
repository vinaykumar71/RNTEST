{"version":3,"sources":["GestureComponents.js"],"names":["MEMOIZED","WeakMap","memoizeWrap","Component","config","memoized","get","set","module","exports","ScrollView","ReactNative","disallowInterruption","shouldCancelWhenOutside","Switch","shouldActivateOnStart","TextInput","DrawerLayoutAndroid","positions","FlatList","React","forwardRef","props","ref","scrollProps"],"mappings":";;;;AAAA;;AACA;;AAEA;;AAEA,IAAMA,QAAQ,GAAG,IAAIC,OAAJ,EAAjB;;AAEA,SAASC,WAAT,CAAqBC,SAArB,EAAgCC,MAAhC,EAAwC;AACtC,MAAID,SAAS,IAAI,IAAjB,EAAuB;AACrB,WAAO,IAAP;AACD;;AACD,MAAIE,QAAQ,GAAGL,QAAQ,CAACM,GAAT,CAAaH,SAAb,CAAf;;AACA,MAAI,CAACE,QAAL,EAAe;AACbA,IAAAA,QAAQ,GAAG,kCAAoBF,SAApB,EAA+BC,MAA/B,CAAX;AACAJ,IAAAA,QAAQ,CAACO,GAAT,CAAaJ,SAAb,EAAwBE,QAAxB;AACD;;AACD,SAAOA,QAAP;AACD;;AAEDG,MAAM,CAACC,OAAP,GAAiB;AAEf,MAAIC,UAAJ,GAAiB;AACf,WAAOR,WAAW,CAACS,qBAAYD,UAAb,EAAyB;AACzCE,MAAAA,oBAAoB,EAAE,IADmB;AAEzCC,MAAAA,uBAAuB,EAAE;AAFgB,KAAzB,CAAlB;AAID,GAPc;;AAQf,MAAIC,MAAJ,GAAa;AACX,WAAOZ,WAAW,CAACS,qBAAYG,MAAb,EAAqB;AACrCD,MAAAA,uBAAuB,EAAE,KADY;AAErCE,MAAAA,qBAAqB,EAAE,IAFc;AAGrCH,MAAAA,oBAAoB,EAAE;AAHe,KAArB,CAAlB;AAKD,GAdc;;AAef,MAAII,SAAJ,GAAgB;AACd,WAAOd,WAAW,CAACS,qBAAYK,SAAb,CAAlB;AACD,GAjBc;;AAkBf,MAAIC,mBAAJ,GAA0B;AACxB,QAAMA,mBAAmB,GAAGf,WAAW,CAACS,qBAAYM,mBAAb,EAAkC;AACvEL,MAAAA,oBAAoB,EAAE;AADiD,KAAlC,CAAvC;AAGAK,IAAAA,mBAAmB,CAACC,SAApB,GAAgCP,qBAAYM,mBAAZ,CAAgCC,SAAhE;AACA,WAAOD,mBAAP;AACD,GAxBc;;AAyBf,MAAIE,QAAJ,GAAe;AACb,QAAI,CAACnB,QAAQ,CAACmB,QAAd,EAAwB;AACtB,UAAMT,UAAU,GAAG,KAAKA,UAAxB;AACAV,MAAAA,QAAQ,CAACmB,QAAT,GAAoBC,eAAMC,UAAN,CAAiB,UAACC,KAAD,EAAQC,GAAR;AAAA,eACnC,6BAAC,oBAAD,CAAa,QAAb;AACE,UAAA,GAAG,EAAEA;AADP,WAEMD,KAFN;AAGE,UAAA,qBAAqB,EAAE,+BAAAE,WAAW;AAAA,mBAAI,6BAAC,UAAD,EAAgBA,WAAhB,CAAJ;AAAA;AAHpC,WADmC;AAAA,OAAjB,CAApB;AAOD;;AACD,WAAOxB,QAAQ,CAACmB,QAAhB;AACD;;AArCc,CAAjB","sourcesContent":["import React from 'react';\nimport ReactNative from 'react-native';\n\nimport createNativeWrapper from './createNativeWrapper';\n\nconst MEMOIZED = new WeakMap();\n\nfunction memoizeWrap(Component, config) {\n  if (Component == null) {\n    return null;\n  }\n  let memoized = MEMOIZED.get(Component);\n  if (!memoized) {\n    memoized = createNativeWrapper(Component, config);\n    MEMOIZED.set(Component, memoized);\n  }\n  return memoized;\n}\n\nmodule.exports = {\n  /* RN's components */\n  get ScrollView() {\n    return memoizeWrap(ReactNative.ScrollView, {\n      disallowInterruption: true,\n      shouldCancelWhenOutside: false,\n    });\n  },\n  get Switch() {\n    return memoizeWrap(ReactNative.Switch, {\n      shouldCancelWhenOutside: false,\n      shouldActivateOnStart: true,\n      disallowInterruption: true,\n    });\n  },\n  get TextInput() {\n    return memoizeWrap(ReactNative.TextInput);\n  },\n  get DrawerLayoutAndroid() {\n    const DrawerLayoutAndroid = memoizeWrap(ReactNative.DrawerLayoutAndroid, {\n      disallowInterruption: true,\n    });\n    DrawerLayoutAndroid.positions = ReactNative.DrawerLayoutAndroid.positions;\n    return DrawerLayoutAndroid;\n  },\n  get FlatList() {\n    if (!MEMOIZED.FlatList) {\n      const ScrollView = this.ScrollView;\n      MEMOIZED.FlatList = React.forwardRef((props, ref) => (\n        <ReactNative.FlatList\n          ref={ref}\n          {...props}\n          renderScrollComponent={scrollProps => <ScrollView {...scrollProps} />}\n        />\n      ));\n    }\n    return MEMOIZED.FlatList;\n  },\n};\n"]}