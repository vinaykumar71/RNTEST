{"version":3,"sources":["index.native.js"],"names":["ENABLE_SCREENS","getViewManagerConfigCompat","name","UIManager","shouldEnableScreens","console","shouldUseScreens","enableScreens","ScreensNativeModules","NativeScreenValue","NativeScreenContainerValue","NativeScreenStack","NativeScreenStackHeaderConfig","NativeScreenStackHeaderSubview","React","ref","onComponentRef","setRef","AnimatedNativeScreen","Animated","version","children","StyleSheet","absoluteFill","style","styles","headerSubview","position","top","right","flexDirection","alignItems","justifyContent","ScreenStackHeaderBackButtonImage","props","ScreenStackHeaderRightView","ScreenStackHeaderLeftView","ScreenStackHeaderCenterView","module","ScreenContainer","Screen","useScreens","screensEnabled"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {\n  Animated,\n  Image,\n  requireNativeComponent,\n  StyleSheet,\n  UIManager,\n  View,\n} from 'react-native';\nimport { version } from 'react-native/Libraries/Core/ReactNativeVersion';\n\nlet ENABLE_SCREENS = false;\n\n// UIManager[`${moduleName}`] is deprecated in RN 0.58 and `getViewManagerConfig` is added.\n// We can remove this when we drop support for RN < 0.58.\nconst getViewManagerConfigCompat = (name) =>\n  typeof UIManager.getViewManagerConfig !== 'undefined'\n    ? UIManager.getViewManagerConfig(name)\n    : UIManager[name];\n\nfunction enableScreens(shouldEnableScreens = true) {\n  ENABLE_SCREENS = shouldEnableScreens;\n  if (ENABLE_SCREENS && !getViewManagerConfigCompat('RNSScreen')) {\n    console.error(\n      `Screen native module hasn't been linked. Please check the react-native-screens README for more details`\n    );\n  }\n}\n\n// we should remove this at some point\nfunction useScreens(shouldUseScreens = true) {\n  console.warn('Method `useScreens` is deprecated, please use `enableScreens`');\n  enableScreens(shouldUseScreens);\n}\n\nfunction screensEnabled() {\n  return ENABLE_SCREENS;\n}\n\n// We initialize these lazily so that importing the module doesn't throw error when not linked\n// This is necessary coz libraries such as React Navigation import the library where it may not be enabled\nlet NativeScreenValue;\nlet NativeScreenContainerValue;\nlet NativeScreenStack;\nlet NativeScreenStackHeaderConfig;\nlet NativeScreenStackHeaderSubview;\nlet AnimatedNativeScreen;\n\nconst ScreensNativeModules = {\n  get NativeScreen() {\n    NativeScreenValue =\n      NativeScreenValue || requireNativeComponent('RNSScreen', null);\n    return NativeScreenValue;\n  },\n\n  get NativeScreenContainer() {\n    NativeScreenContainerValue =\n      NativeScreenContainerValue ||\n      requireNativeComponent('RNSScreenContainer', null);\n    return NativeScreenContainerValue;\n  },\n\n  get NativeScreenStack() {\n    NativeScreenStack =\n      NativeScreenStack || requireNativeComponent('RNSScreenStack', null);\n    return NativeScreenStack;\n  },\n\n  get NativeScreenStackHeaderConfig() {\n    NativeScreenStackHeaderConfig =\n      NativeScreenStackHeaderConfig ||\n      requireNativeComponent('RNSScreenStackHeaderConfig', null);\n    return NativeScreenStackHeaderConfig;\n  },\n\n  get NativeScreenStackHeaderSubview() {\n    NativeScreenStackHeaderSubview =\n      NativeScreenStackHeaderSubview ||\n      requireNativeComponent('RNSScreenStackHeaderSubview', null);\n    return NativeScreenStackHeaderSubview;\n  },\n};\n\nclass Screen extends React.Component {\n  setNativeProps(props) {\n    this._ref.setNativeProps(props);\n  }\n\n  setRef = (ref) => {\n    this._ref = ref;\n    this.props.onComponentRef && this.props.onComponentRef(ref);\n  };\n\n  render() {\n    if (!ENABLE_SCREENS) {\n      // Filter out active prop in this case because it is unused and\n      // can cause problems depending on react-native version:\n      // https://github.com/react-navigation/react-navigation/issues/4886\n\n      /* eslint-disable no-unused-vars */\n      const { active, onComponentRef, ...props } = this.props;\n\n      return <Animated.View {...props} ref={this.setRef} />;\n    } else {\n      AnimatedNativeScreen =\n        AnimatedNativeScreen ||\n        Animated.createAnimatedComponent(ScreensNativeModules.NativeScreen);\n\n      // When using RN from master version is 0.0.0\n      if (version.minor >= 57 || version.minor === 0) {\n        return <AnimatedNativeScreen {...this.props} ref={this.setRef} />;\n      } else {\n        // On RN version below 0.57 we need to wrap screen's children with an\n        // additional View because of a bug fixed in react-native/pull/20658 which\n        // was preventing a view from having both styles and some other props being\n        // \"animated\" (using Animated native driver)\n        const { style, children, ...rest } = this.props;\n        return (\n          <AnimatedNativeScreen\n            {...rest}\n            ref={this.setRef}\n            style={StyleSheet.absoluteFill}>\n            <Animated.View style={style}>{children}</Animated.View>\n          </AnimatedNativeScreen>\n        );\n      }\n    }\n  }\n}\n\nclass ScreenContainer extends React.Component {\n  render() {\n    if (!ENABLE_SCREENS) {\n      return <View {...this.props} />;\n    } else {\n      return <ScreensNativeModules.NativeScreenContainer {...this.props} />;\n    }\n  }\n}\n\nconst styles = StyleSheet.create({\n  headerSubview: {\n    position: 'absolute',\n    top: 0,\n    right: 0,\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n});\n\nconst ScreenStackHeaderBackButtonImage = (props) => (\n  <ScreensNativeModules.NativeScreenStackHeaderSubview\n    type=\"back\"\n    style={styles.headerSubview}>\n    <Image resizeMode=\"center\" fadeDuration={0} {...props} />\n  </ScreensNativeModules.NativeScreenStackHeaderSubview>\n);\n\nconst ScreenStackHeaderRightView = (props) => (\n  <ScreensNativeModules.NativeScreenStackHeaderSubview\n    {...props}\n    type=\"right\"\n    style={styles.headerSubview}\n  />\n);\n\nconst ScreenStackHeaderLeftView = (props) => (\n  <ScreensNativeModules.NativeScreenStackHeaderSubview\n    {...props}\n    type=\"left\"\n    style={styles.headerSubview}\n  />\n);\n\nconst ScreenStackHeaderCenterView = (props) => (\n  <ScreensNativeModules.NativeScreenStackHeaderSubview\n    {...props}\n    type=\"center\"\n    style={styles.headerSubview}\n  />\n);\n\nmodule.exports = {\n  ScreenContainer,\n  Screen,\n  get NativeScreen() {\n    return ScreensNativeModules.NativeScreen;\n  },\n\n  get NativeScreenContainer() {\n    return ScreensNativeModules.NativeScreenContainer;\n  },\n\n  get ScreenStack() {\n    return ScreensNativeModules.NativeScreenStack;\n  },\n  get ScreenStackHeaderConfig() {\n    return ScreensNativeModules.NativeScreenStackHeaderConfig;\n  },\n  get ScreenStackHeaderSubview() {\n    return ScreensNativeModules.NativeScreenStackHeaderSubview;\n  },\n  ScreenStackHeaderBackButtonImage,\n  ScreenStackHeaderRightView,\n  ScreenStackHeaderLeftView,\n  ScreenStackHeaderCenterView,\n\n  enableScreens,\n  useScreens,\n  screensEnabled,\n};\n"]}